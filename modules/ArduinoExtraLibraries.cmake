
foreach(ARDUINO_CUSTOM_LIB_NAME ${ARDUINO_LIBS})

    if(NOT ARDUINO_LIBS_SEARCHPATH)
        set(ARDUINO_CUSTOM_LIB_DIR "${ARDUINO_CUSTOM_LIB_NAME}")
    else()
        find_path(ARDUINO_CUSTOM_LIB_DIR
            name "${ARDUINO_CUSTOM_LIB_NAME}"
            PATHS ${ARDUINO_LIBS_SEARCHPATH})
    endif()

    if(NOT EXISTS "${ARDUINO_CUSTOM_LIB_DIR}/${ARDUINO_CUSTOM_LIB_NAME}")
        message(FATAL_ERROR "library ${ARDUINO_CUSTOM_LIB_NAME} does not exist.")
    endif()

    # headers
    include_directories("${ARDUINO_CUSTOM_LIB_DIR}/${ARDUINO_CUSTOM_LIB_NAME}"
                        "${ARDUINO_CUSTOM_LIB_DIR}/${ARDUINO_CUSTOM_LIB_NAME}/include")

    # source files
    file(GLOB ARDUINO_LIB_SOURCE_FILES
        "${ARDUINO_CUSTOM_LIB_DIR}/${ARDUINO_CUSTOM_LIB_NAME}/*.S"
        "${ARDUINO_CUSTOM_LIB_DIR}/${ARDUINO_CUSTOM_LIB_NAME}/*.c"
        "${ARDUINO_CUSTOM_LIB_DIR}/${ARDUINO_CUSTOM_LIB_NAME}/*.cpp"
        "${ARDUINO_CUSTOM_LIB_DIR}/${ARDUINO_CUSTOM_LIB_NAME}/src/*.S"
        "${ARDUINO_CUSTOM_LIB_DIR}/${ARDUINO_CUSTOM_LIB_NAME}/src/*.c"
        "${ARDUINO_CUSTOM_LIB_DIR}/${ARDUINO_CUSTOM_LIB_NAME}/src/*.cpp")
    # remove main
    list(REMOVE_ITEM ARDUINO_LIB_SOURCE_FILES "${ARDUINO_CUSTOM_LIB_DIR}/${ARDUINO_CUSTOM_LIB_NAME}/main.cpp")
    list(REMOVE_ITEM ARDUINO_LIB_SOURCE_FILES "${ARDUINO_CUSTOM_LIB_DIR}/${ARDUINO_CUSTOM_LIB_NAME}/src/main.cpp")

    # append to master arduino sources list
    list(APPEND ARDUINO_SOURCE_FILES ${ARDUINO_LIB_SOURCE_FILES})

endforeach()

